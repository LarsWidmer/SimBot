# Makefile.in generated by automake 1.11.1 from Makefile.am.
# ode/demo/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





pkgdatadir = $(datadir)/ode
pkgincludedir = $(includedir)/ode
pkglibdir = $(libdir)/ode
pkglibexecdir = $(libexecdir)/ode
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
noinst_PROGRAMS = demo_boxstack$(EXEEXT) demo_buggy$(EXEEXT) \
	demo_cards$(EXEEXT) demo_chain1$(EXEEXT) demo_chain2$(EXEEXT) \
	demo_collision$(EXEEXT) demo_convex_cd$(EXEEXT) \
	demo_crash$(EXEEXT) demo_cylvssphere$(EXEEXT) \
	demo_feedback$(EXEEXT) demo_friction$(EXEEXT) \
	demo_gyroscopic$(EXEEXT) demo_heightfield$(EXEEXT) \
	demo_hinge$(EXEEXT) demo_I$(EXEEXT) demo_jointPR$(EXEEXT) \
	demo_joints$(EXEEXT) demo_jointPU$(EXEEXT) \
	demo_kinematic$(EXEEXT) demo_motion$(EXEEXT) \
	demo_motor$(EXEEXT) demo_ode$(EXEEXT) demo_piston$(EXEEXT) \
	demo_plane2d$(EXEEXT) demo_slider$(EXEEXT) demo_space$(EXEEXT) \
	demo_space_stress$(EXEEXT) demo_step$(EXEEXT) lars$(EXEEXT) \
	$(am__EXEEXT_1)
am__append_1 = \
                demo_basket \
                demo_cyl \
                demo_moving_trimesh \
                demo_moving_convex \
                demo_trimesh \
                lars

am__append_2 = -DdTRIMESH_ENABLED
#am__append_3 = resources.o
subdir = ode/demo
DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/ode/src/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__EXEEXT_1 = demo_basket$(EXEEXT) demo_cyl$(EXEEXT) \
	demo_moving_trimesh$(EXEEXT) \
	demo_moving_convex$(EXEEXT) \
	demo_trimesh$(EXEEXT) lars$(EXEEXT)
PROGRAMS = $(noinst_PROGRAMS)
am_demo_I_OBJECTS = demo_I.$(OBJEXT)
demo_I_OBJECTS = $(am_demo_I_OBJECTS)
demo_I_LDADD = $(LDADD)
demo_I_DEPENDENCIES = $(top_builddir)/drawstuff/src/libdrawstuff.la \
	$(top_builddir)/ode/src/libode.la $(am__append_3)
am__demo_basket_SOURCES_DIST = demo_basket.cpp
am_demo_basket_OBJECTS = demo_basket.$(OBJEXT)
demo_basket_OBJECTS = $(am_demo_basket_OBJECTS)
demo_basket_LDADD = $(LDADD)
demo_basket_DEPENDENCIES =  \
	$(top_builddir)/drawstuff/src/libdrawstuff.la \
	$(top_builddir)/ode/src/libode.la $(am__append_3)
am_demo_boxstack_OBJECTS = demo_boxstack.$(OBJEXT)
demo_boxstack_OBJECTS = $(am_demo_boxstack_OBJECTS)
demo_boxstack_LDADD = $(LDADD)
demo_boxstack_DEPENDENCIES =  \
	$(top_builddir)/drawstuff/src/libdrawstuff.la \
	$(top_builddir)/ode/src/libode.la $(am__append_3)
am_demo_buggy_OBJECTS = demo_buggy.$(OBJEXT)
demo_buggy_OBJECTS = $(am_demo_buggy_OBJECTS)
demo_buggy_LDADD = $(LDADD)
demo_buggy_DEPENDENCIES =  \
	$(top_builddir)/drawstuff/src/libdrawstuff.la \
	$(top_builddir)/ode/src/libode.la $(am__append_3)
am_demo_cards_OBJECTS = demo_cards.$(OBJEXT)
demo_cards_OBJECTS = $(am_demo_cards_OBJECTS)
demo_cards_LDADD = $(LDADD)
demo_cards_DEPENDENCIES =  \
	$(top_builddir)/drawstuff/src/libdrawstuff.la \
	$(top_builddir)/ode/src/libode.la $(am__append_3)
am_demo_chain1_OBJECTS = demo_chain1.$(OBJEXT)
demo_chain1_OBJECTS = $(am_demo_chain1_OBJECTS)
am__DEPENDENCIES_1 = $(top_builddir)/drawstuff/src/libdrawstuff.la \
	$(top_builddir)/ode/src/libode.la $(am__append_3)
demo_chain1_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_demo_chain2_OBJECTS = demo_chain2.$(OBJEXT)
demo_chain2_OBJECTS = $(am_demo_chain2_OBJECTS)
demo_chain2_LDADD = $(LDADD)
demo_chain2_DEPENDENCIES =  \
	$(top_builddir)/drawstuff/src/libdrawstuff.la \
	$(top_builddir)/ode/src/libode.la $(am__append_3)
am_demo_collision_OBJECTS = demo_collision.$(OBJEXT)
demo_collision_OBJECTS = $(am_demo_collision_OBJECTS)
demo_collision_LDADD = $(LDADD)
demo_collision_DEPENDENCIES =  \
	$(top_builddir)/drawstuff/src/libdrawstuff.la \
	$(top_builddir)/ode/src/libode.la $(am__append_3)
am_demo_convex_cd_OBJECTS = demo_convex_cd.$(OBJEXT)
demo_convex_cd_OBJECTS = $(am_demo_convex_cd_OBJECTS)
demo_convex_cd_LDADD = $(LDADD)
am_demo_crash_OBJECTS = demo_crash.$(OBJEXT)
demo_crash_OBJECTS = $(am_demo_crash_OBJECTS)
demo_crash_LDADD = $(LDADD)
demo_crash_DEPENDENCIES =  \
	$(top_builddir)/drawstuff/src/libdrawstuff.la \
	$(top_builddir)/ode/src/libode.la $(am__append_3)
am__demo_cyl_SOURCES_DIST = demo_cyl.cpp
am_demo_cyl_OBJECTS = demo_cyl.$(OBJEXT)
demo_cyl_OBJECTS = $(am_demo_cyl_OBJECTS)
demo_cyl_LDADD = $(LDADD)
demo_cyl_DEPENDENCIES = $(top_builddir)/drawstuff/src/libdrawstuff.la \
	$(top_builddir)/ode/src/libode.la $(am__append_3)
am_demo_cylvssphere_OBJECTS = demo_cylvssphere.$(OBJEXT)
demo_cylvssphere_OBJECTS = $(am_demo_cylvssphere_OBJECTS)
demo_cylvssphere_LDADD = $(LDADD)
demo_cylvssphere_DEPENDENCIES =  \
	$(top_builddir)/drawstuff/src/libdrawstuff.la \
	$(top_builddir)/ode/src/libode.la $(am__append_3)
am_demo_feedback_OBJECTS = demo_feedback.$(OBJEXT)
demo_feedback_OBJECTS = $(am_demo_feedback_OBJECTS)
demo_feedback_LDADD = $(LDADD)
demo_feedback_DEPENDENCIES =  \
	$(top_builddir)/drawstuff/src/libdrawstuff.la \
	$(top_builddir)/ode/src/libode.la $(am__append_3)
am_demo_friction_OBJECTS = demo_friction.$(OBJEXT)
demo_friction_OBJECTS = $(am_demo_friction_OBJECTS)
demo_friction_LDADD = $(LDADD)
demo_friction_DEPENDENCIES =  \
	$(top_builddir)/drawstuff/src/libdrawstuff.la \
	$(top_builddir)/ode/src/libode.la $(am__append_3)
am_demo_gyroscopic_OBJECTS = demo_gyroscopic.$(OBJEXT)
demo_gyroscopic_OBJECTS = $(am_demo_gyroscopic_OBJECTS)
demo_gyroscopic_LDADD = $(LDADD)
demo_gyroscopic_DEPENDENCIES =  \
	$(top_builddir)/drawstuff/src/libdrawstuff.la \
	$(top_builddir)/ode/src/libode.la $(am__append_3)
am_demo_heightfield_OBJECTS = demo_heightfield.$(OBJEXT)
demo_heightfield_OBJECTS = $(am_demo_heightfield_OBJECTS)
demo_heightfield_LDADD = $(LDADD)
demo_heightfield_DEPENDENCIES =  \
	$(top_builddir)/drawstuff/src/libdrawstuff.la \
	$(top_builddir)/ode/src/libode.la $(am__append_3)
am_demo_hinge_OBJECTS = demo_hinge.$(OBJEXT)
demo_hinge_OBJECTS = $(am_demo_hinge_OBJECTS)
demo_hinge_LDADD = $(LDADD)
demo_hinge_DEPENDENCIES =  \
	$(top_builddir)/drawstuff/src/libdrawstuff.la \
	$(top_builddir)/ode/src/libode.la $(am__append_3)
am_demo_jointPR_OBJECTS = demo_jointPR.$(OBJEXT)
demo_jointPR_OBJECTS = $(am_demo_jointPR_OBJECTS)
demo_jointPR_LDADD = $(LDADD)
demo_jointPR_DEPENDENCIES =  \
	$(top_builddir)/drawstuff/src/libdrawstuff.la \
	$(top_builddir)/ode/src/libode.la $(am__append_3)
am_demo_jointPU_OBJECTS = demo_jointPU.$(OBJEXT)
demo_jointPU_OBJECTS = $(am_demo_jointPU_OBJECTS)
demo_jointPU_LDADD = $(LDADD)
demo_jointPU_DEPENDENCIES =  \
	$(top_builddir)/drawstuff/src/libdrawstuff.la \
	$(top_builddir)/ode/src/libode.la $(am__append_3)
am_demo_joints_OBJECTS = demo_joints.$(OBJEXT)
demo_joints_OBJECTS = $(am_demo_joints_OBJECTS)
demo_joints_LDADD = $(LDADD)
demo_joints_DEPENDENCIES =  \
	$(top_builddir)/drawstuff/src/libdrawstuff.la \
	$(top_builddir)/ode/src/libode.la $(am__append_3)
am_demo_kinematic_OBJECTS = demo_kinematic.$(OBJEXT)
demo_kinematic_OBJECTS = $(am_demo_kinematic_OBJECTS)
demo_kinematic_LDADD = $(LDADD)
demo_kinematic_DEPENDENCIES =  \
	$(top_builddir)/drawstuff/src/libdrawstuff.la \
	$(top_builddir)/ode/src/libode.la $(am__append_3)
am_demo_motion_OBJECTS = demo_motion.$(OBJEXT)
demo_motion_OBJECTS = $(am_demo_motion_OBJECTS)
demo_motion_LDADD = $(LDADD)
demo_motion_DEPENDENCIES =  \
	$(top_builddir)/drawstuff/src/libdrawstuff.la \
	$(top_builddir)/ode/src/libode.la $(am__append_3)
am_demo_motor_OBJECTS = demo_motor.$(OBJEXT)
demo_motor_OBJECTS = $(am_demo_motor_OBJECTS)
demo_motor_LDADD = $(LDADD)
demo_motor_DEPENDENCIES =  \
	$(top_builddir)/drawstuff/src/libdrawstuff.la \
	$(top_builddir)/ode/src/libode.la $(am__append_3)
am__demo_moving_convex_SOURCES_DIST = demo_moving_convex.cpp
am_demo_moving_convex_OBJECTS =  \
	demo_moving_convex.$(OBJEXT)
demo_moving_convex_OBJECTS = $(am_demo_moving_convex_OBJECTS)
demo_moving_convex_LDADD = $(LDADD)
demo_moving_convex_DEPENDENCIES =  \
	$(top_builddir)/drawstuff/src/libdrawstuff.la \
	$(top_builddir)/ode/src/libode.la $(am__append_3)
am__demo_moving_trimesh_SOURCES_DIST = demo_moving_trimesh.cpp
am_demo_moving_trimesh_OBJECTS =  \
	demo_moving_trimesh.$(OBJEXT)
demo_moving_trimesh_OBJECTS = $(am_demo_moving_trimesh_OBJECTS)
demo_moving_trimesh_LDADD = $(LDADD)
demo_moving_trimesh_DEPENDENCIES =  \
	$(top_builddir)/drawstuff/src/libdrawstuff.la \
	$(top_builddir)/ode/src/libode.la $(am__append_3)
am_demo_ode_OBJECTS = demo_ode.$(OBJEXT)
demo_ode_OBJECTS = $(am_demo_ode_OBJECTS)
demo_ode_LDADD = $(LDADD)
demo_ode_DEPENDENCIES = $(top_builddir)/drawstuff/src/libdrawstuff.la \
	$(top_builddir)/ode/src/libode.la $(am__append_3)
am_demo_piston_OBJECTS = demo_piston.$(OBJEXT)
demo_piston_OBJECTS = $(am_demo_piston_OBJECTS)
demo_piston_LDADD = $(LDADD)
demo_piston_DEPENDENCIES =  \
	$(top_builddir)/drawstuff/src/libdrawstuff.la \
	$(top_builddir)/ode/src/libode.la $(am__append_3)
am_demo_plane2d_OBJECTS = demo_plane2d.$(OBJEXT)
demo_plane2d_OBJECTS = $(am_demo_plane2d_OBJECTS)
demo_plane2d_LDADD = $(LDADD)
demo_plane2d_DEPENDENCIES =  \
	$(top_builddir)/drawstuff/src/libdrawstuff.la \
	$(top_builddir)/ode/src/libode.la $(am__append_3)
am_demo_slider_OBJECTS = demo_slider.$(OBJEXT)
demo_slider_OBJECTS = $(am_demo_slider_OBJECTS)
demo_slider_LDADD = $(LDADD)
demo_slider_DEPENDENCIES =  \
	$(top_builddir)/drawstuff/src/libdrawstuff.la \
	$(top_builddir)/ode/src/libode.la $(am__append_3)
am_demo_space_OBJECTS = demo_space.$(OBJEXT)
demo_space_OBJECTS = $(am_demo_space_OBJECTS)
demo_space_LDADD = $(LDADD)
demo_space_DEPENDENCIES =  \
	$(top_builddir)/drawstuff/src/libdrawstuff.la \
	$(top_builddir)/ode/src/libode.la $(am__append_3)
am_demo_space_stress_OBJECTS = demo_space_stress.$(OBJEXT)
demo_space_stress_OBJECTS = $(am_demo_space_stress_OBJECTS)
demo_space_stress_LDADD = $(LDADD)
demo_space_stress_DEPENDENCIES =  \
	$(top_builddir)/drawstuff/src/libdrawstuff.la \
	$(top_builddir)/ode/src/libode.la $(am__append_3)
am_demo_step_OBJECTS = demo_step.$(OBJEXT)
demo_step_OBJECTS = $(am_demo_step_OBJECTS)
demo_step_LDADD = $(LDADD)
demo_step_DEPENDENCIES =  \
	$(top_builddir)/drawstuff/src/libdrawstuff.la \
	$(top_builddir)/ode/src/libode.la $(am__append_3)
am__demo_trimesh_SOURCES_DIST = demo_trimesh.cpp
am_demo_trimesh_OBJECTS = demo_trimesh.$(OBJEXT)
demo_trimesh_OBJECTS = $(am_demo_trimesh_OBJECTS)
demo_trimesh_LDADD = $(LDADD)
demo_trimesh_DEPENDENCIES =  \
	$(top_builddir)/drawstuff/src/libdrawstuff.la \
	$(top_builddir)/ode/src/libode.la $(am__append_3)
am_lars_OBJECTS = lars.$(OBJEXT) XmlFileHandling.$(OBJEXT) \
	Mutex.$(OBJEXT) Helper.$(OBJEXT) Defines.$(OBJEXT) \
	Configuration.$(OBJEXT) tinystr.$(OBJEXT) tinyxml.$(OBJEXT) \
	tinyxmlerror.$(OBJEXT) tinyxmlparser.$(OBJEXT)
lars_OBJECTS = $(am_lars_OBJECTS)
lars_LDADD = $(LDADD)
lars_DEPENDENCIES = $(top_builddir)/drawstuff/src/libdrawstuff.la \
	$(top_builddir)/ode/src/libode.la $(am__append_3)
DEFAULT_INCLUDES = -I. -I$(top_builddir)/ode/src
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(demo_I_SOURCES) $(demo_basket_SOURCES) \
	$(demo_boxstack_SOURCES) $(demo_buggy_SOURCES) \
	$(demo_cards_SOURCES) $(demo_chain1_SOURCES) \
	$(demo_chain2_SOURCES) $(demo_collision_SOURCES) \
	$(demo_convex_cd_SOURCES) $(demo_crash_SOURCES) \
	$(demo_cyl_SOURCES) $(demo_cylvssphere_SOURCES) \
	$(demo_feedback_SOURCES) $(demo_friction_SOURCES) \
	$(demo_gyroscopic_SOURCES) $(demo_heightfield_SOURCES) \
	$(demo_hinge_SOURCES) $(demo_jointPR_SOURCES) \
	$(demo_jointPU_SOURCES) $(demo_joints_SOURCES) \
	$(demo_kinematic_SOURCES) $(demo_motion_SOURCES) \
	$(demo_motor_SOURCES) $(demo_moving_convex_SOURCES) \
	$(demo_moving_trimesh_SOURCES) $(demo_ode_SOURCES) \
	$(demo_piston_SOURCES) $(demo_plane2d_SOURCES) \
	$(demo_slider_SOURCES) $(demo_space_SOURCES) \
	$(demo_space_stress_SOURCES) $(demo_step_SOURCES) \
	$(demo_trimesh_SOURCES) $(lars_SOURCES)
DIST_SOURCES = $(demo_I_SOURCES) $(am__demo_basket_SOURCES_DIST) \
	$(demo_boxstack_SOURCES) $(demo_buggy_SOURCES) \
	$(demo_cards_SOURCES) $(demo_chain1_SOURCES) \
	$(demo_chain2_SOURCES) $(demo_collision_SOURCES) \
	$(demo_convex_cd_SOURCES) $(demo_crash_SOURCES) \
	$(am__demo_cyl_SOURCES_DIST) $(demo_cylvssphere_SOURCES) \
	$(demo_feedback_SOURCES) $(demo_friction_SOURCES) \
	$(demo_gyroscopic_SOURCES) $(demo_heightfield_SOURCES) \
	$(demo_hinge_SOURCES) $(demo_jointPR_SOURCES) \
	$(demo_jointPU_SOURCES) $(demo_joints_SOURCES) \
	$(demo_kinematic_SOURCES) $(demo_motion_SOURCES) \
	$(demo_motor_SOURCES) $(am__demo_moving_convex_SOURCES_DIST) \
	$(am__demo_moving_trimesh_SOURCES_DIST) $(demo_ode_SOURCES) \
	$(demo_piston_SOURCES) $(demo_plane2d_SOURCES) \
	$(demo_slider_SOURCES) $(demo_space_SOURCES) \
	$(demo_space_stress_SOURCES) $(demo_step_SOURCES) \
	$(am__demo_trimesh_SOURCES_DIST) $(lars_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
HEADERS = $(noinst_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \
	$(RECURSIVE_CLEAN_TARGETS:-recursive=) tags TAGS ctags CTAGS \
	distdir
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = ${SHELL} /home/lars/Projekte/svn-lars/trunk/SimBot/ode-0.11.1/missing --run aclocal-1.11
ALLOCA = 
AMTAR = ${SHELL} /home/lars/Projekte/svn-lars/trunk/SimBot/ode-0.11.1/missing --run tar
AR = ar
AS = as
AUTOCONF = ${SHELL} /home/lars/Projekte/svn-lars/trunk/SimBot/ode-0.11.1/missing --run autoconf
AUTOHEADER = ${SHELL} /home/lars/Projekte/svn-lars/trunk/SimBot/ode-0.11.1/missing --run autoheader
AUTOMAKE = ${SHELL} /home/lars/Projekte/svn-lars/trunk/SimBot/ode-0.11.1/missing --run automake-1.11
AWK = mawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS =  -DdSINGLE
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = dlltool
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
EXTRA_LIBTOOL_LDFLAGS = 
FGREP = /bin/grep -F
GL_LIBS = -lGLU -lGL
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBOBJS = 
LIBS = -lm  -lpthread
LIBSTDCXX = -lstdc++
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/lars/Projekte/svn-lars/trunk/SimBot/ode-0.11.1/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
ODE_PRECISION = -DdSINGLE
ODE_RELEASE = 0.11.1
ODE_VERSION_INFO = -version-info 2:1:1
OTOOL = 
OTOOL64 = 
PACKAGE = ode
PACKAGE_BUGREPORT = ode@ode.org
PACKAGE_NAME = ODE
PACKAGE_STRING = ODE 0.11.1
PACKAGE_TARNAME = ode
PACKAGE_URL = 
PACKAGE_VERSION = 0.11.1
PATH_SEPARATOR = :
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
VERSION = 0.11.1
WINDRES = 
XMKMF = 
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS = 
X_PRE_LIBS =  -lSM -lICE
abs_builddir = /home/lars/Projekte/svn-lars/trunk/SimBot/ode-0.11.1/ode/demo
abs_srcdir = /home/lars/Projekte/svn-lars/trunk/SimBot/ode-0.11.1/ode/demo
abs_top_builddir = /home/lars/Projekte/svn-lars/trunk/SimBot/ode-0.11.1
abs_top_srcdir = /home/lars/Projekte/svn-lars/trunk/SimBot/ode-0.11.1
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
ac_ct_WINDRES = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/lars/Projekte/svn-lars/trunk/SimBot/ode-0.11.1/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
subdirs =  ou
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
SUBDIRS = classes
AM_CPPFLAGS = -I$(abs_top_srcdir)/include \
	-DDRAWSTUFF_TEXTURE_PATH="\"$(abs_top_srcdir)/drawstuff/textures\"" \
	$(am__append_2)
AM_LDFLAGS = $(X_PRE_LIBS) $(X_LIBS) $(X_EXTRA_LIBS)

# On Windows, GL_LIBS must go after libdrawstuff.la.
LDADD = $(top_builddir)/drawstuff/src/libdrawstuff.la \
	$(top_builddir)/ode/src/libode.la -lGLU -lGL $(am__append_3)
noinst_HEADERS = basket_geom.h texturepath.h world_geom3.h bunny_geom.h convex_bunny_geom.h \
                 icosahedron_geom.h

demo_boxstack_SOURCES = demo_boxstack.cpp
demo_buggy_SOURCES = demo_buggy.cpp
demo_cards_SOURCES = demo_cards.cpp
demo_chain1_SOURCES = demo_chain1.c
demo_chain1_LDADD = $(LDADD) -lstdc++ 
demo_chain2_SOURCES = demo_chain2.cpp
demo_collision_SOURCES = demo_collision.cpp
demo_convex_cd_SOURCES = demo_convex_cd.cpp
demo_convex_cd_DEPENDENCIES = $(top_builddir)/ode/src/libode.la
demo_crash_SOURCES = demo_crash.cpp
demo_cylvssphere_SOURCES = demo_cylvssphere.cpp
demo_feedback_SOURCES = demo_feedback.cpp
demo_friction_SOURCES = demo_friction.cpp
demo_gyroscopic_SOURCES = demo_gyroscopic.cpp
demo_heightfield_SOURCES = demo_heightfield.cpp
demo_hinge_SOURCES = demo_hinge.cpp
demo_I_SOURCES = demo_I.cpp
demo_jointPR_SOURCES = demo_jointPR.cpp
demo_joints_SOURCES = demo_joints.cpp
demo_jointPU_SOURCES = demo_jointPU.cpp
demo_kinematic_SOURCES = demo_kinematic.cpp
demo_motion_SOURCES = demo_motion.cpp
demo_motor_SOURCES = demo_motor.cpp
demo_ode_SOURCES = demo_ode.cpp
demo_piston_SOURCES = demo_piston.cpp
demo_plane2d_SOURCES = demo_plane2d.cpp
demo_slider_SOURCES = demo_slider.cpp
demo_space_SOURCES = demo_space.cpp
demo_space_stress_SOURCES = demo_space_stress.cpp
demo_step_SOURCES = demo_step.cpp
lars_SOURCES = lars.cpp classes/XmlFileHandling.cpp classes/Mutex.cpp classes/Helper.cpp classes/Defines.cpp classes/Configuration.cpp classes/Helper-Templates.cpp2 classes/XmlFileHandling.h classes/Mutex.h classes/Helper.h classes/Defines.h classes/Configuration.h tinyxml/tinystr.h tinyxml/tinyxml.h tinyxml/tinystr.cpp tinyxml/tinyxml.cpp tinyxml/tinyxmlerror.cpp tinyxml/tinyxmlparser.cpp
demo_basket_SOURCES = demo_basket.cpp
demo_cyl_SOURCES = demo_cyl.cpp
demo_moving_trimesh_SOURCES = demo_moving_trimesh.cpp
demo_moving_convex_SOURCES = demo_moving_convex.cpp
demo_trimesh_SOURCES = demo_trimesh.cpp
all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign ode/demo/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign ode/demo/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
demo_I$(EXEEXT): $(demo_I_OBJECTS) $(demo_I_DEPENDENCIES) 
	@rm -f demo_I$(EXEEXT)
	$(CXXLINK) $(demo_I_OBJECTS) $(demo_I_LDADD) $(LIBS)
demo_basket$(EXEEXT): $(demo_basket_OBJECTS) $(demo_basket_DEPENDENCIES) 
	@rm -f demo_basket$(EXEEXT)
	$(CXXLINK) $(demo_basket_OBJECTS) $(demo_basket_LDADD) $(LIBS)
demo_boxstack$(EXEEXT): $(demo_boxstack_OBJECTS) $(demo_boxstack_DEPENDENCIES) 
	@rm -f demo_boxstack$(EXEEXT)
	$(CXXLINK) $(demo_boxstack_OBJECTS) $(demo_boxstack_LDADD) $(LIBS)
demo_buggy$(EXEEXT): $(demo_buggy_OBJECTS) $(demo_buggy_DEPENDENCIES) 
	@rm -f demo_buggy$(EXEEXT)
	$(CXXLINK) $(demo_buggy_OBJECTS) $(demo_buggy_LDADD) $(LIBS)
demo_cards$(EXEEXT): $(demo_cards_OBJECTS) $(demo_cards_DEPENDENCIES) 
	@rm -f demo_cards$(EXEEXT)
	$(CXXLINK) $(demo_cards_OBJECTS) $(demo_cards_LDADD) $(LIBS)
demo_chain1$(EXEEXT): $(demo_chain1_OBJECTS) $(demo_chain1_DEPENDENCIES) 
	@rm -f demo_chain1$(EXEEXT)
	$(LINK) $(demo_chain1_OBJECTS) $(demo_chain1_LDADD) $(LIBS)
demo_chain2$(EXEEXT): $(demo_chain2_OBJECTS) $(demo_chain2_DEPENDENCIES) 
	@rm -f demo_chain2$(EXEEXT)
	$(CXXLINK) $(demo_chain2_OBJECTS) $(demo_chain2_LDADD) $(LIBS)
demo_collision$(EXEEXT): $(demo_collision_OBJECTS) $(demo_collision_DEPENDENCIES) 
	@rm -f demo_collision$(EXEEXT)
	$(CXXLINK) $(demo_collision_OBJECTS) $(demo_collision_LDADD) $(LIBS)
demo_convex_cd$(EXEEXT): $(demo_convex_cd_OBJECTS) $(demo_convex_cd_DEPENDENCIES) 
	@rm -f demo_convex_cd$(EXEEXT)
	$(CXXLINK) $(demo_convex_cd_OBJECTS) $(demo_convex_cd_LDADD) $(LIBS)
demo_crash$(EXEEXT): $(demo_crash_OBJECTS) $(demo_crash_DEPENDENCIES) 
	@rm -f demo_crash$(EXEEXT)
	$(CXXLINK) $(demo_crash_OBJECTS) $(demo_crash_LDADD) $(LIBS)
demo_cyl$(EXEEXT): $(demo_cyl_OBJECTS) $(demo_cyl_DEPENDENCIES) 
	@rm -f demo_cyl$(EXEEXT)
	$(CXXLINK) $(demo_cyl_OBJECTS) $(demo_cyl_LDADD) $(LIBS)
demo_cylvssphere$(EXEEXT): $(demo_cylvssphere_OBJECTS) $(demo_cylvssphere_DEPENDENCIES) 
	@rm -f demo_cylvssphere$(EXEEXT)
	$(CXXLINK) $(demo_cylvssphere_OBJECTS) $(demo_cylvssphere_LDADD) $(LIBS)
demo_feedback$(EXEEXT): $(demo_feedback_OBJECTS) $(demo_feedback_DEPENDENCIES) 
	@rm -f demo_feedback$(EXEEXT)
	$(CXXLINK) $(demo_feedback_OBJECTS) $(demo_feedback_LDADD) $(LIBS)
demo_friction$(EXEEXT): $(demo_friction_OBJECTS) $(demo_friction_DEPENDENCIES) 
	@rm -f demo_friction$(EXEEXT)
	$(CXXLINK) $(demo_friction_OBJECTS) $(demo_friction_LDADD) $(LIBS)
demo_gyroscopic$(EXEEXT): $(demo_gyroscopic_OBJECTS) $(demo_gyroscopic_DEPENDENCIES) 
	@rm -f demo_gyroscopic$(EXEEXT)
	$(CXXLINK) $(demo_gyroscopic_OBJECTS) $(demo_gyroscopic_LDADD) $(LIBS)
demo_heightfield$(EXEEXT): $(demo_heightfield_OBJECTS) $(demo_heightfield_DEPENDENCIES) 
	@rm -f demo_heightfield$(EXEEXT)
	$(CXXLINK) $(demo_heightfield_OBJECTS) $(demo_heightfield_LDADD) $(LIBS)
demo_hinge$(EXEEXT): $(demo_hinge_OBJECTS) $(demo_hinge_DEPENDENCIES) 
	@rm -f demo_hinge$(EXEEXT)
	$(CXXLINK) $(demo_hinge_OBJECTS) $(demo_hinge_LDADD) $(LIBS)
demo_jointPR$(EXEEXT): $(demo_jointPR_OBJECTS) $(demo_jointPR_DEPENDENCIES) 
	@rm -f demo_jointPR$(EXEEXT)
	$(CXXLINK) $(demo_jointPR_OBJECTS) $(demo_jointPR_LDADD) $(LIBS)
demo_jointPU$(EXEEXT): $(demo_jointPU_OBJECTS) $(demo_jointPU_DEPENDENCIES) 
	@rm -f demo_jointPU$(EXEEXT)
	$(CXXLINK) $(demo_jointPU_OBJECTS) $(demo_jointPU_LDADD) $(LIBS)
demo_joints$(EXEEXT): $(demo_joints_OBJECTS) $(demo_joints_DEPENDENCIES) 
	@rm -f demo_joints$(EXEEXT)
	$(CXXLINK) $(demo_joints_OBJECTS) $(demo_joints_LDADD) $(LIBS)
demo_kinematic$(EXEEXT): $(demo_kinematic_OBJECTS) $(demo_kinematic_DEPENDENCIES) 
	@rm -f demo_kinematic$(EXEEXT)
	$(CXXLINK) $(demo_kinematic_OBJECTS) $(demo_kinematic_LDADD) $(LIBS)
demo_motion$(EXEEXT): $(demo_motion_OBJECTS) $(demo_motion_DEPENDENCIES) 
	@rm -f demo_motion$(EXEEXT)
	$(CXXLINK) $(demo_motion_OBJECTS) $(demo_motion_LDADD) $(LIBS)
demo_motor$(EXEEXT): $(demo_motor_OBJECTS) $(demo_motor_DEPENDENCIES) 
	@rm -f demo_motor$(EXEEXT)
	$(CXXLINK) $(demo_motor_OBJECTS) $(demo_motor_LDADD) $(LIBS)
demo_moving_convex$(EXEEXT): $(demo_moving_convex_OBJECTS) $(demo_moving_convex_DEPENDENCIES) 
	@rm -f demo_moving_convex$(EXEEXT)
	$(CXXLINK) $(demo_moving_convex_OBJECTS) $(demo_moving_convex_LDADD) $(LIBS)
demo_moving_trimesh$(EXEEXT): $(demo_moving_trimesh_OBJECTS) $(demo_moving_trimesh_DEPENDENCIES) 
	@rm -f demo_moving_trimesh$(EXEEXT)
	$(CXXLINK) $(demo_moving_trimesh_OBJECTS) $(demo_moving_trimesh_LDADD) $(LIBS)
demo_ode$(EXEEXT): $(demo_ode_OBJECTS) $(demo_ode_DEPENDENCIES) 
	@rm -f demo_ode$(EXEEXT)
	$(CXXLINK) $(demo_ode_OBJECTS) $(demo_ode_LDADD) $(LIBS)
demo_piston$(EXEEXT): $(demo_piston_OBJECTS) $(demo_piston_DEPENDENCIES) 
	@rm -f demo_piston$(EXEEXT)
	$(CXXLINK) $(demo_piston_OBJECTS) $(demo_piston_LDADD) $(LIBS)
demo_plane2d$(EXEEXT): $(demo_plane2d_OBJECTS) $(demo_plane2d_DEPENDENCIES) 
	@rm -f demo_plane2d$(EXEEXT)
	$(CXXLINK) $(demo_plane2d_OBJECTS) $(demo_plane2d_LDADD) $(LIBS)
demo_slider$(EXEEXT): $(demo_slider_OBJECTS) $(demo_slider_DEPENDENCIES) 
	@rm -f demo_slider$(EXEEXT)
	$(CXXLINK) $(demo_slider_OBJECTS) $(demo_slider_LDADD) $(LIBS)
demo_space$(EXEEXT): $(demo_space_OBJECTS) $(demo_space_DEPENDENCIES) 
	@rm -f demo_space$(EXEEXT)
	$(CXXLINK) $(demo_space_OBJECTS) $(demo_space_LDADD) $(LIBS)
demo_space_stress$(EXEEXT): $(demo_space_stress_OBJECTS) $(demo_space_stress_DEPENDENCIES) 
	@rm -f demo_space_stress$(EXEEXT)
	$(CXXLINK) $(demo_space_stress_OBJECTS) $(demo_space_stress_LDADD) $(LIBS)
demo_step$(EXEEXT): $(demo_step_OBJECTS) $(demo_step_DEPENDENCIES) 
	@rm -f demo_step$(EXEEXT)
	$(CXXLINK) $(demo_step_OBJECTS) $(demo_step_LDADD) $(LIBS)
demo_trimesh$(EXEEXT): $(demo_trimesh_OBJECTS) $(demo_trimesh_DEPENDENCIES) 
	@rm -f demo_trimesh$(EXEEXT)
	$(CXXLINK) $(demo_trimesh_OBJECTS) $(demo_trimesh_LDADD) $(LIBS)
lars$(EXEEXT): $(lars_OBJECTS) $(lars_DEPENDENCIES) 
	@rm -f lars$(EXEEXT)
	$(CXXLINK) $(lars_OBJECTS) $(lars_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/Configuration.Po
include ./$(DEPDIR)/Defines.Po
include ./$(DEPDIR)/Helper.Po
include ./$(DEPDIR)/Mutex.Po
include ./$(DEPDIR)/XmlFileHandling.Po
include ./$(DEPDIR)/demo_I.Po
include ./$(DEPDIR)/demo_basket.Po
include ./$(DEPDIR)/demo_boxstack.Po
include ./$(DEPDIR)/demo_buggy.Po
include ./$(DEPDIR)/demo_cards.Po
include ./$(DEPDIR)/demo_chain1.Po
include ./$(DEPDIR)/demo_chain2.Po
include ./$(DEPDIR)/demo_collision.Po
include ./$(DEPDIR)/demo_convex_cd.Po
include ./$(DEPDIR)/demo_crash.Po
include ./$(DEPDIR)/demo_cyl.Po
include ./$(DEPDIR)/demo_cylvssphere.Po
include ./$(DEPDIR)/demo_feedback.Po
include ./$(DEPDIR)/demo_friction.Po
include ./$(DEPDIR)/demo_gyroscopic.Po
include ./$(DEPDIR)/demo_heightfield.Po
include ./$(DEPDIR)/demo_hinge.Po
include ./$(DEPDIR)/demo_jointPR.Po
include ./$(DEPDIR)/demo_jointPU.Po
include ./$(DEPDIR)/demo_joints.Po
include ./$(DEPDIR)/demo_kinematic.Po
include ./$(DEPDIR)/demo_motion.Po
include ./$(DEPDIR)/demo_motor.Po
include ./$(DEPDIR)/demo_moving_convex.Po
include ./$(DEPDIR)/demo_moving_trimesh.Po
include ./$(DEPDIR)/demo_ode.Po
include ./$(DEPDIR)/demo_piston.Po
include ./$(DEPDIR)/demo_plane2d.Po
include ./$(DEPDIR)/demo_slider.Po
include ./$(DEPDIR)/demo_space.Po
include ./$(DEPDIR)/demo_space_stress.Po
include ./$(DEPDIR)/demo_step.Po
include ./$(DEPDIR)/demo_trimesh.Po
include ./$(DEPDIR)/lars.Po
include ./$(DEPDIR)/tinystr.Po
include ./$(DEPDIR)/tinyxml.Po
include ./$(DEPDIR)/tinyxmlerror.Po
include ./$(DEPDIR)/tinyxmlparser.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

XmlFileHandling.o: classes/XmlFileHandling.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XmlFileHandling.o -MD -MP -MF $(DEPDIR)/XmlFileHandling.Tpo -c -o XmlFileHandling.o `test -f 'classes/XmlFileHandling.cpp' || echo '$(srcdir)/'`classes/XmlFileHandling.cpp
	$(am__mv) $(DEPDIR)/XmlFileHandling.Tpo $(DEPDIR)/XmlFileHandling.Po
#	source='classes/XmlFileHandling.cpp' object='XmlFileHandling.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XmlFileHandling.o `test -f 'classes/XmlFileHandling.cpp' || echo '$(srcdir)/'`classes/XmlFileHandling.cpp

XmlFileHandling.obj: classes/XmlFileHandling.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT XmlFileHandling.obj -MD -MP -MF $(DEPDIR)/XmlFileHandling.Tpo -c -o XmlFileHandling.obj `if test -f 'classes/XmlFileHandling.cpp'; then $(CYGPATH_W) 'classes/XmlFileHandling.cpp'; else $(CYGPATH_W) '$(srcdir)/classes/XmlFileHandling.cpp'; fi`
	$(am__mv) $(DEPDIR)/XmlFileHandling.Tpo $(DEPDIR)/XmlFileHandling.Po
#	source='classes/XmlFileHandling.cpp' object='XmlFileHandling.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XmlFileHandling.obj `if test -f 'classes/XmlFileHandling.cpp'; then $(CYGPATH_W) 'classes/XmlFileHandling.cpp'; else $(CYGPATH_W) '$(srcdir)/classes/XmlFileHandling.cpp'; fi`

Mutex.o: classes/Mutex.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Mutex.o -MD -MP -MF $(DEPDIR)/Mutex.Tpo -c -o Mutex.o `test -f 'classes/Mutex.cpp' || echo '$(srcdir)/'`classes/Mutex.cpp
	$(am__mv) $(DEPDIR)/Mutex.Tpo $(DEPDIR)/Mutex.Po
#	source='classes/Mutex.cpp' object='Mutex.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Mutex.o `test -f 'classes/Mutex.cpp' || echo '$(srcdir)/'`classes/Mutex.cpp

Mutex.obj: classes/Mutex.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Mutex.obj -MD -MP -MF $(DEPDIR)/Mutex.Tpo -c -o Mutex.obj `if test -f 'classes/Mutex.cpp'; then $(CYGPATH_W) 'classes/Mutex.cpp'; else $(CYGPATH_W) '$(srcdir)/classes/Mutex.cpp'; fi`
	$(am__mv) $(DEPDIR)/Mutex.Tpo $(DEPDIR)/Mutex.Po
#	source='classes/Mutex.cpp' object='Mutex.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Mutex.obj `if test -f 'classes/Mutex.cpp'; then $(CYGPATH_W) 'classes/Mutex.cpp'; else $(CYGPATH_W) '$(srcdir)/classes/Mutex.cpp'; fi`

Helper.o: classes/Helper.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Helper.o -MD -MP -MF $(DEPDIR)/Helper.Tpo -c -o Helper.o `test -f 'classes/Helper.cpp' || echo '$(srcdir)/'`classes/Helper.cpp
	$(am__mv) $(DEPDIR)/Helper.Tpo $(DEPDIR)/Helper.Po
#	source='classes/Helper.cpp' object='Helper.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Helper.o `test -f 'classes/Helper.cpp' || echo '$(srcdir)/'`classes/Helper.cpp

Helper.obj: classes/Helper.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Helper.obj -MD -MP -MF $(DEPDIR)/Helper.Tpo -c -o Helper.obj `if test -f 'classes/Helper.cpp'; then $(CYGPATH_W) 'classes/Helper.cpp'; else $(CYGPATH_W) '$(srcdir)/classes/Helper.cpp'; fi`
	$(am__mv) $(DEPDIR)/Helper.Tpo $(DEPDIR)/Helper.Po
#	source='classes/Helper.cpp' object='Helper.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Helper.obj `if test -f 'classes/Helper.cpp'; then $(CYGPATH_W) 'classes/Helper.cpp'; else $(CYGPATH_W) '$(srcdir)/classes/Helper.cpp'; fi`

Defines.o: classes/Defines.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Defines.o -MD -MP -MF $(DEPDIR)/Defines.Tpo -c -o Defines.o `test -f 'classes/Defines.cpp' || echo '$(srcdir)/'`classes/Defines.cpp
	$(am__mv) $(DEPDIR)/Defines.Tpo $(DEPDIR)/Defines.Po
#	source='classes/Defines.cpp' object='Defines.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Defines.o `test -f 'classes/Defines.cpp' || echo '$(srcdir)/'`classes/Defines.cpp

Defines.obj: classes/Defines.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Defines.obj -MD -MP -MF $(DEPDIR)/Defines.Tpo -c -o Defines.obj `if test -f 'classes/Defines.cpp'; then $(CYGPATH_W) 'classes/Defines.cpp'; else $(CYGPATH_W) '$(srcdir)/classes/Defines.cpp'; fi`
	$(am__mv) $(DEPDIR)/Defines.Tpo $(DEPDIR)/Defines.Po
#	source='classes/Defines.cpp' object='Defines.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Defines.obj `if test -f 'classes/Defines.cpp'; then $(CYGPATH_W) 'classes/Defines.cpp'; else $(CYGPATH_W) '$(srcdir)/classes/Defines.cpp'; fi`

Configuration.o: classes/Configuration.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Configuration.o -MD -MP -MF $(DEPDIR)/Configuration.Tpo -c -o Configuration.o `test -f 'classes/Configuration.cpp' || echo '$(srcdir)/'`classes/Configuration.cpp
	$(am__mv) $(DEPDIR)/Configuration.Tpo $(DEPDIR)/Configuration.Po
#	source='classes/Configuration.cpp' object='Configuration.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Configuration.o `test -f 'classes/Configuration.cpp' || echo '$(srcdir)/'`classes/Configuration.cpp

Configuration.obj: classes/Configuration.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Configuration.obj -MD -MP -MF $(DEPDIR)/Configuration.Tpo -c -o Configuration.obj `if test -f 'classes/Configuration.cpp'; then $(CYGPATH_W) 'classes/Configuration.cpp'; else $(CYGPATH_W) '$(srcdir)/classes/Configuration.cpp'; fi`
	$(am__mv) $(DEPDIR)/Configuration.Tpo $(DEPDIR)/Configuration.Po
#	source='classes/Configuration.cpp' object='Configuration.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Configuration.obj `if test -f 'classes/Configuration.cpp'; then $(CYGPATH_W) 'classes/Configuration.cpp'; else $(CYGPATH_W) '$(srcdir)/classes/Configuration.cpp'; fi`

tinystr.o: tinyxml/tinystr.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tinystr.o -MD -MP -MF $(DEPDIR)/tinystr.Tpo -c -o tinystr.o `test -f 'tinyxml/tinystr.cpp' || echo '$(srcdir)/'`tinyxml/tinystr.cpp
	$(am__mv) $(DEPDIR)/tinystr.Tpo $(DEPDIR)/tinystr.Po
#	source='tinyxml/tinystr.cpp' object='tinystr.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tinystr.o `test -f 'tinyxml/tinystr.cpp' || echo '$(srcdir)/'`tinyxml/tinystr.cpp

tinystr.obj: tinyxml/tinystr.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tinystr.obj -MD -MP -MF $(DEPDIR)/tinystr.Tpo -c -o tinystr.obj `if test -f 'tinyxml/tinystr.cpp'; then $(CYGPATH_W) 'tinyxml/tinystr.cpp'; else $(CYGPATH_W) '$(srcdir)/tinyxml/tinystr.cpp'; fi`
	$(am__mv) $(DEPDIR)/tinystr.Tpo $(DEPDIR)/tinystr.Po
#	source='tinyxml/tinystr.cpp' object='tinystr.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tinystr.obj `if test -f 'tinyxml/tinystr.cpp'; then $(CYGPATH_W) 'tinyxml/tinystr.cpp'; else $(CYGPATH_W) '$(srcdir)/tinyxml/tinystr.cpp'; fi`

tinyxml.o: tinyxml/tinyxml.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tinyxml.o -MD -MP -MF $(DEPDIR)/tinyxml.Tpo -c -o tinyxml.o `test -f 'tinyxml/tinyxml.cpp' || echo '$(srcdir)/'`tinyxml/tinyxml.cpp
	$(am__mv) $(DEPDIR)/tinyxml.Tpo $(DEPDIR)/tinyxml.Po
#	source='tinyxml/tinyxml.cpp' object='tinyxml.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tinyxml.o `test -f 'tinyxml/tinyxml.cpp' || echo '$(srcdir)/'`tinyxml/tinyxml.cpp

tinyxml.obj: tinyxml/tinyxml.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tinyxml.obj -MD -MP -MF $(DEPDIR)/tinyxml.Tpo -c -o tinyxml.obj `if test -f 'tinyxml/tinyxml.cpp'; then $(CYGPATH_W) 'tinyxml/tinyxml.cpp'; else $(CYGPATH_W) '$(srcdir)/tinyxml/tinyxml.cpp'; fi`
	$(am__mv) $(DEPDIR)/tinyxml.Tpo $(DEPDIR)/tinyxml.Po
#	source='tinyxml/tinyxml.cpp' object='tinyxml.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tinyxml.obj `if test -f 'tinyxml/tinyxml.cpp'; then $(CYGPATH_W) 'tinyxml/tinyxml.cpp'; else $(CYGPATH_W) '$(srcdir)/tinyxml/tinyxml.cpp'; fi`

tinyxmlerror.o: tinyxml/tinyxmlerror.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tinyxmlerror.o -MD -MP -MF $(DEPDIR)/tinyxmlerror.Tpo -c -o tinyxmlerror.o `test -f 'tinyxml/tinyxmlerror.cpp' || echo '$(srcdir)/'`tinyxml/tinyxmlerror.cpp
	$(am__mv) $(DEPDIR)/tinyxmlerror.Tpo $(DEPDIR)/tinyxmlerror.Po
#	source='tinyxml/tinyxmlerror.cpp' object='tinyxmlerror.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tinyxmlerror.o `test -f 'tinyxml/tinyxmlerror.cpp' || echo '$(srcdir)/'`tinyxml/tinyxmlerror.cpp

tinyxmlerror.obj: tinyxml/tinyxmlerror.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tinyxmlerror.obj -MD -MP -MF $(DEPDIR)/tinyxmlerror.Tpo -c -o tinyxmlerror.obj `if test -f 'tinyxml/tinyxmlerror.cpp'; then $(CYGPATH_W) 'tinyxml/tinyxmlerror.cpp'; else $(CYGPATH_W) '$(srcdir)/tinyxml/tinyxmlerror.cpp'; fi`
	$(am__mv) $(DEPDIR)/tinyxmlerror.Tpo $(DEPDIR)/tinyxmlerror.Po
#	source='tinyxml/tinyxmlerror.cpp' object='tinyxmlerror.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tinyxmlerror.obj `if test -f 'tinyxml/tinyxmlerror.cpp'; then $(CYGPATH_W) 'tinyxml/tinyxmlerror.cpp'; else $(CYGPATH_W) '$(srcdir)/tinyxml/tinyxmlerror.cpp'; fi`

tinyxmlparser.o: tinyxml/tinyxmlparser.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tinyxmlparser.o -MD -MP -MF $(DEPDIR)/tinyxmlparser.Tpo -c -o tinyxmlparser.o `test -f 'tinyxml/tinyxmlparser.cpp' || echo '$(srcdir)/'`tinyxml/tinyxmlparser.cpp
	$(am__mv) $(DEPDIR)/tinyxmlparser.Tpo $(DEPDIR)/tinyxmlparser.Po
#	source='tinyxml/tinyxmlparser.cpp' object='tinyxmlparser.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tinyxmlparser.o `test -f 'tinyxml/tinyxmlparser.cpp' || echo '$(srcdir)/'`tinyxml/tinyxmlparser.cpp

tinyxmlparser.obj: tinyxml/tinyxmlparser.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tinyxmlparser.obj -MD -MP -MF $(DEPDIR)/tinyxmlparser.Tpo -c -o tinyxmlparser.obj `if test -f 'tinyxml/tinyxmlparser.cpp'; then $(CYGPATH_W) 'tinyxml/tinyxmlparser.cpp'; else $(CYGPATH_W) '$(srcdir)/tinyxml/tinyxmlparser.cpp'; fi`
	$(am__mv) $(DEPDIR)/tinyxmlparser.Tpo $(DEPDIR)/tinyxmlparser.Po
#	source='tinyxml/tinyxmlparser.cpp' object='tinyxmlparser.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tinyxmlparser.obj `if test -f 'tinyxml/tinyxmlparser.cpp'; then $(CYGPATH_W) 'tinyxml/tinyxmlparser.cpp'; else $(CYGPATH_W) '$(srcdir)/tinyxml/tinyxmlparser.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(MKDIR_P) "$(distdir)/$$subdir" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(PROGRAMS) $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-generic clean-libtool clean-noinstPROGRAMS \
	mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am:

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am:

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) ctags-recursive \
	install-am install-strip tags-recursive

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am check check-am clean clean-generic clean-libtool \
	clean-noinstPROGRAMS ctags ctags-recursive distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags tags-recursive \
	uninstall uninstall-am


#resources.o: $(top_srcdir)/drawstuff/src/resources.rc $(top_srcdir)/drawstuff/src/resource.h
#	 $(top_srcdir)/drawstuff/src/resources.rc -o resources.o

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
